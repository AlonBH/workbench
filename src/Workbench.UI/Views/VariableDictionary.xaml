<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:Workbench.ViewModels"
                    xmlns:controls="clr-namespace:Workbench.Controls">

    <DataTemplate DataType="{x:Type viewModels:VariableDomainExpressionViewModel}">
        <!-- 
        An adorned control is used to enable the edit button when the user 
        hovers over the expression control.
        -->
        <controls:AdornedControl HorizontalAdornerPlacement="Outside"
                                 VerticalAdornerPlacement="Outside"
                                 AdornerOffsetX="-12"
                                 AdornerOffsetY="8"
                                 IsMouseOverShowEnabled="{Binding ElementName=modelControl, Path=IsNotDragging}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftGraphicRow" Width="20"/>
                    <ColumnDefinition x:Name="VariableExpressionRow" Width="*"/>
                    <ColumnDefinition x:Name="RightGraphicRow" Width="20"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="PaddingRow" Height="20"/>
                    <RowDefinition x:Name="ContentRow" Height="*"/>
                </Grid.RowDefinitions>

                <Image Grid.Column="0" 
                       Grid.Row="1"
                       Source="../Images/LeftCurlyBracket.png"/>

                <!-- The domain expression text. -->
                <controls:EditableTextBlock
                        x:Name="domainExpressionEditor"
                        Text="{Binding Path=Text, Mode=TwoWay}"
                        IsInEditMode="{Binding IsExpressionEditing, Mode=TwoWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        TextAlignment="Center"
                        Grid.Column="1"
                        Grid.Row="1"
                        FontFamily="Courier New"
                        FontSize="36"
                        MinWidth="40"
                        MinHeight="50"/>

                <Image Grid.Column="2" 
                       Grid.Row="1"
                       Source="../Images/RightCurlyBracket.png"/>
            </Grid>
            <controls:AdornedControl.AdornerContent>
                <!-- 
                This is the adorner that pops up when the user hovers the mouse over the domain name.
                It displays a button that the user can click to edit the domain name.
                -->
                <Canvas x:Name="variableExpressionAdornerCanvas"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Width="30"
                        Height="30">
                    <Line X1="0"
                          Y1="30"
                          X2="15"
                          Y2="15"
                          Stroke="Black"
                          StrokeThickness="1"/>
                    <Button x:Name="editVariableExpressionButton"
                            Canvas.Left="10"
                            Canvas.Top="0"
                            Width="20"
                            Height="20"
                            Cursor="Hand"
                            Focusable="False"
                            Command="{Binding EditExpressionCommand}"
                            CommandParameter="{Binding}"
                            Template="{StaticResource editButtonTemplate}"/>
                </Canvas>
            </controls:AdornedControl.AdornerContent>
        </controls:AdornedControl>
    </DataTemplate>

    <!-- 
    Define a data-template for the 'VariableViewModel' class.
    -->
    <DataTemplate DataType="{x:Type viewModels:VariableViewModel}">
        <Grid Height="60">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="VariableNameColumn" Width="Auto"/>
                <ColumnDefinition x:Name="VariableDomainExpressionColumn" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 
            An adorned control is used to enable the edit button when the user 
            hovers over the variable name control.
            -->
            <controls:AdornedControl HorizontalAdornerPlacement="Outside"
                                     VerticalAdornerPlacement="Outside"
                                     AdornerOffsetX="-12"
                                     AdornerOffsetY="8"
                                     IsMouseOverShowEnabled="{Binding ElementName=modelControl, Path=IsNotDragging}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="LeftGraphicColumn" Width="30"/>
                        <ColumnDefinition x:Name="NameGraphicColumn" Width="Auto"/>
                        <ColumnDefinition x:Name="RightGraphicColumn" Width="30"/>
                    </Grid.ColumnDefinitions>
                    <!-- Left hand '<' -->
                    <Line X1="0"
                            Y1="30"
                            X2="30"
                            Y2="0"
                            Grid.Column="0"
                            Stroke="Black"
                            StrokeThickness="2"/>
                    <Line X1="0"
                            Y1="30"
                            X2="30"
                            Y2="60"
                            Grid.Column="0"
                            Stroke="Black"
                            StrokeThickness="2"/>

                    <!-- The name of the variable. -->
                    <controls:EditableTextBlock x:Name="nameEditor"
                                                Grid.Column="1"
                                                Text="{Binding Name, Mode=TwoWay}"
                                                IsInEditMode="{Binding IsNameEditing, Mode=TwoWay}"
                                                FontFamily="Courier New"
                                                FontWeight="Bold"
                                                FontSize="24"
                                                FontStyle="Italic"/>

                    <!-- Right hand '>' -->
                    <Canvas Grid.Column="2">
                        <Line X1="0"
                              Y1="0"
                              X2="30"
                              Y2="30"
                              Stroke="Black"
                              StrokeThickness="2"/>
                        <Line X1="30"
                              Y1="30"
                              X2="0"
                              Y2="60"
                              Stroke="Black"
                              StrokeThickness="2"/>
                    </Canvas>
                </Grid>
                <controls:AdornedControl.AdornerContent>
                    <!-- 
                        This is the adorner that pops up when the user hovers the mouse over the variable name.
                        It displays a button that the user can click to edit the name.
                        -->
                    <Canvas x:Name="variableAdornerCanvas"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Width="30"
                                Height="30">
                        <Line X1="0"
                                  Y1="30"
                                  X2="15"
                                  Y2="15"
                                  Stroke="Black"
                                  StrokeThickness="1"/>
                        <Button x:Name="editVariableNameButton"
                                    Canvas.Left="10"
                                    Canvas.Top="0"
                                    Width="20"
                                    Height="20"
                                    Cursor="Hand"
                                    Focusable="False"
                                    Command="{Binding EditNameCommand}"
                                    CommandParameter="{Binding}"
                                    Template="{StaticResource editButtonTemplate}"/>
                    </Canvas>
                </controls:AdornedControl.AdornerContent>
            </controls:AdornedControl>

            <ContentPresenter x:Name="expressionEditor"
                                  Grid.Column="1"
                                  Content="{Binding DomainExpression}"/>
        </Grid>
    </DataTemplate>

    <!-- 
        Define a data-template for the AggregateVariableViewModel class.
        -->
    <DataTemplate DataType="{x:Type viewModels:AggregateVariableViewModel}">
        <Grid Height="60">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="VariableNameColumn" Width="Auto"/>
                <ColumnDefinition x:Name="VariableDomainExpressionColumn" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- 
                An adorned control is used to enable the edit button when the user 
                hovers over the variable name control.
                -->
            <controls:AdornedControl HorizontalAdornerPlacement="Outside"
                                         VerticalAdornerPlacement="Outside"
                                         AdornerOffsetX="-12"
                                         AdornerOffsetY="8"
                                         IsMouseOverShowEnabled="{Binding ElementName=modelControl, Path=IsNotDragging}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="LeftGraphicColumn" Width="30"/>
                        <ColumnDefinition x:Name="NameGraphicColumn" Width="Auto"/>
                        <ColumnDefinition x:Name="RightGraphicColumn" Width="30"/>
                    </Grid.ColumnDefinitions>
                    <!-- Left hand '<' -->
                    <Line X1="0"
                            Y1="30"
                            X2="30"
                            Y2="0"
                            Grid.Column="0"
                            Stroke="Black"
                            StrokeThickness="2"/>
                    <Line X1="0"
                            Y1="30"
                            X2="30"
                            Y2="60"
                            Grid.Column="0"
                            Stroke="Black"
                            StrokeThickness="2"/>

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="NameColumn" Width="Auto"/>
                            <ColumnDefinition x:Name="RangeColumn" Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- The name of the aggregate variable. -->
                        <controls:EditableTextBlock x:Name="nameEditor"
                                                        Text="{Binding Name, Mode=TwoWay}"
                                                        IsInEditMode="{Binding IsNameEditing, Mode=TwoWay}"
                                                        FontFamily="Courier New"
                                                        FontWeight="Bold"
                                                        FontSize="24"
                                                        FontStyle="Italic"/>
                        <!-- Size of the aggregate -->
                        <controls:EditableTextBlock x:Name="variableSizeEditor"
                                       Grid.Column="1"
                                       Text="{Binding NumberVariables}"/>
                    </Grid>

                    <!-- Right hand '>' -->
                    <Canvas Grid.Column="2">
                        <Line X1="0"
                                Y1="0"
                                X2="30"
                                Y2="30"
                                Stroke="Black"
                                StrokeThickness="2"/>
                        <Line X1="30"
                                Y1="30"
                                X2="0"
                                Y2="60"
                                Stroke="Black"
                                StrokeThickness="2"/>
                    </Canvas>
                </Grid>
                <controls:AdornedControl.AdornerContent>
                    <!-- 
                        This is the adorner that pops up when the user hovers the mouse over the variable name.
                        It displays a button that the user can click to edit the name.
                        -->
                    <Canvas x:Name="variableAdornerCanvas"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Width="30"
                            Height="30">
                        <Line X1="0"
                                Y1="30"
                                X2="15"
                                Y2="15"
                                Stroke="Black"
                                StrokeThickness="1"/>
                        <Button x:Name="editVariableNameButton"
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Width="20"
                                Height="20"
                                Cursor="Hand"
                                Focusable="False"
                                Command="{Binding EditNameCommand}"
                                CommandParameter="{Binding}"
                                Template="{StaticResource editButtonTemplate}"/>
                    </Canvas>
                </controls:AdornedControl.AdornerContent>
            </controls:AdornedControl>

            <ContentPresenter x:Name="expressionEditor"
                                Grid.Column="1"
                                Content="{Binding DomainExpression}"/>
        </Grid>
    </DataTemplate>

    <!--
    Define a data-template for the DomainExpressionViewModel class.
    -->
    <DataTemplate DataType="{x:Type viewModels:DomainExpressionViewModel}">
        <!-- 
        An adorned control is used to enable the edit button when the user 
        hovers over the domain name control.
        -->
        <controls:AdornedControl HorizontalAdornerPlacement="Outside"
                                    VerticalAdornerPlacement="Outside"
                                    AdornerOffsetX="-12"
                                    AdornerOffsetY="8"
                                    IsMouseOverShowEnabled="{Binding ElementName=modelControl, Path=IsNotDragging}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="LeftGraphicRow" Width="20"/>
                    <ColumnDefinition x:Name="DomainExpressionRow" Width="*"/>
                    <ColumnDefinition x:Name="RightGraphicRow" Width="20"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="PaddingRow" Height="20"/>
                    <RowDefinition x:Name="ContentRow" Height="*"/>
                </Grid.RowDefinitions>

                <Image Grid.Column="0" 
                           Grid.Row="1"
                           Source="../Images/LeftCurlyBracket.png"/>

                <!-- The domain expression text. -->
                <controls:EditableTextBlock
                        x:Name="domainExpressionEditor"
                        Text="{Binding Path=Text, Mode=TwoWay}"
                        IsInEditMode="{Binding IsExpressionEditing, Mode=TwoWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        TextAlignment="Center"
                        Grid.Column="1"
                        Grid.Row="1"
                        FontFamily="Courier New"
                        FontSize="36"
                        MinWidth="40"
                        MinHeight="50"/>

                <Image Grid.Column="2" 
                           Grid.Row="1"
                           Source="../Images/RightCurlyBracket.png"/>
            </Grid>
            <controls:AdornedControl.AdornerContent>

                <!-- 
                This is the adorner that pops up when the user hovers the mouse over the domain name.
                It displays a button that the user can click to edit the domain name.
                -->
                <Canvas x:Name="domainAdornerCanvas"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Width="30"
                        Height="30">
                    <Line X1="0"
                              Y1="30"
                              X2="15"
                              Y2="15"
                              Stroke="Black"
                              StrokeThickness="1"/>
                    <Button x:Name="editDomainNameButton"
                            Canvas.Left="10"
                            Canvas.Top="0"
                            Width="20"
                            Height="20"
                            Cursor="Hand"
                            Focusable="False"
                            Command="{Binding EditExpressionCommand}"
                            CommandParameter="{Binding}"
                            Template="{StaticResource editButtonTemplate}"/>
                </Canvas>
            </controls:AdornedControl.AdornerContent>
        </controls:AdornedControl>
    </DataTemplate>

</ResourceDictionary>